What happens when you initialize a repository? Why do you need to do it?

		When you run git init you create a git for the folder. however you do not aff any commits to it. 
		This is because then you would not be able to add a commit comment and also maybe you do not want all the
		files and folders to be committed.
		you can run git status to check on the contents and status of the repository and folder.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

		The staging area in git allows you to add different files to be commited in a logical manner rather than
		having to add everything at once or one by one.
		you could add all of the logicaly related files at once and add a commit comment explaining the reasoning.
		this is useful as it prevents an overwhelming amount of information being uploaded at once and allows
		logical seperation of files.

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?